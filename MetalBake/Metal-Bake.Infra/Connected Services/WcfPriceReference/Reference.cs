//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Metal_Bake.Infra.WcfPriceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemPrice", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ItemPrice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIdField, value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfPriceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalculateOrderPrice", ReplyAction="http://tempuri.org/IService/CalculateOrderPriceResponse")]
        decimal CalculateOrderPrice(System.Collections.Generic.Dictionary<string, int> orderList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalculateOrderPrice", ReplyAction="http://tempuri.org/IService/CalculateOrderPriceResponse")]
        System.Threading.Tasks.Task<decimal> CalculateOrderPriceAsync(System.Collections.Generic.Dictionary<string, int> orderList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPrice", ReplyAction="http://tempuri.org/IService/GetPriceResponse")]
        decimal GetPrice(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPrice", ReplyAction="http://tempuri.org/IService/GetPriceResponse")]
        System.Threading.Tasks.Task<decimal> GetPriceAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPrices", ReplyAction="http://tempuri.org/IService/GetAllPricesResponse")]
        Metal_Bake.Infra.WcfPriceReference.ItemPrice[] GetAllPrices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPrices", ReplyAction="http://tempuri.org/IService/GetAllPricesResponse")]
        System.Threading.Tasks.Task<Metal_Bake.Infra.WcfPriceReference.ItemPrice[]> GetAllPricesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetPrice", ReplyAction="http://tempuri.org/IService/SetPriceResponse")]
        decimal SetPrice(Metal_Bake.Infra.WcfPriceReference.ItemPrice item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetPrice", ReplyAction="http://tempuri.org/IService/SetPriceResponse")]
        System.Threading.Tasks.Task<decimal> SetPriceAsync(Metal_Bake.Infra.WcfPriceReference.ItemPrice item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TxtListPrice", ReplyAction="http://tempuri.org/IService/TxtListPriceResponse")]
        void TxtListPrice();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TxtListPrice", ReplyAction="http://tempuri.org/IService/TxtListPriceResponse")]
        System.Threading.Tasks.Task TxtListPriceAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Metal_Bake.Infra.WcfPriceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Metal_Bake.Infra.WcfPriceReference.IService>, Metal_Bake.Infra.WcfPriceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal CalculateOrderPrice(System.Collections.Generic.Dictionary<string, int> orderList) {
            return base.Channel.CalculateOrderPrice(orderList);
        }
        
        public System.Threading.Tasks.Task<decimal> CalculateOrderPriceAsync(System.Collections.Generic.Dictionary<string, int> orderList) {
            return base.Channel.CalculateOrderPriceAsync(orderList);
        }
        
        public decimal GetPrice(string key) {
            return base.Channel.GetPrice(key);
        }
        
        public System.Threading.Tasks.Task<decimal> GetPriceAsync(string key) {
            return base.Channel.GetPriceAsync(key);
        }
        
        public Metal_Bake.Infra.WcfPriceReference.ItemPrice[] GetAllPrices() {
            return base.Channel.GetAllPrices();
        }
        
        public System.Threading.Tasks.Task<Metal_Bake.Infra.WcfPriceReference.ItemPrice[]> GetAllPricesAsync() {
            return base.Channel.GetAllPricesAsync();
        }
        
        public decimal SetPrice(Metal_Bake.Infra.WcfPriceReference.ItemPrice item) {
            return base.Channel.SetPrice(item);
        }
        
        public System.Threading.Tasks.Task<decimal> SetPriceAsync(Metal_Bake.Infra.WcfPriceReference.ItemPrice item) {
            return base.Channel.SetPriceAsync(item);
        }
        
        public void TxtListPrice() {
            base.Channel.TxtListPrice();
        }
        
        public System.Threading.Tasks.Task TxtListPriceAsync() {
            return base.Channel.TxtListPriceAsync();
        }
    }
}
