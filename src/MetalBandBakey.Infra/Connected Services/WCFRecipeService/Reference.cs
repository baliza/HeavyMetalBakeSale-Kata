//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MetalBandBakey.Infra.WCFRecipeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFRecipeService.IRecipeService")]
    public interface IRecipeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipe", ReplyAction="http://tempuri.org/IRecipeService/GetRecipeResponse")]
        Recipe GetRecipe(string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipe", ReplyAction="http://tempuri.org/IRecipeService/GetRecipeResponse")]
        System.Threading.Tasks.Task<Recipe> GetRecipeAsync(string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/SaveRecipe", ReplyAction="http://tempuri.org/IRecipeService/SaveRecipeResponse")]
        bool SaveRecipe(Recipe item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/SaveRecipe", ReplyAction="http://tempuri.org/IRecipeService/SaveRecipeResponse")]
        System.Threading.Tasks.Task<bool> SaveRecipeAsync(Recipe item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetAllRecipes", ReplyAction="http://tempuri.org/IRecipeService/GetAllRecipesResponse")]
        Recipe[] GetAllRecipes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetAllRecipes", ReplyAction="http://tempuri.org/IRecipeService/GetAllRecipesResponse")]
        System.Threading.Tasks.Task<Recipe[]> GetAllRecipesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecipeServiceChannel : MetalBandBakey.Infra.WCFRecipeService.IRecipeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecipeServiceClient : System.ServiceModel.ClientBase<MetalBandBakey.Infra.WCFRecipeService.IRecipeService>, MetalBandBakey.Infra.WCFRecipeService.IRecipeService {
        
        public RecipeServiceClient() {
        }
        
        public RecipeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecipeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecipeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecipeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Recipe GetRecipe(string itemId) {
            return base.Channel.GetRecipe(itemId);
        }
        
        public System.Threading.Tasks.Task<Recipe> GetRecipeAsync(string itemId) {
            return base.Channel.GetRecipeAsync(itemId);
        }
        
        public bool SaveRecipe(Recipe item) {
            return base.Channel.SaveRecipe(item);
        }
        
        public System.Threading.Tasks.Task<bool> SaveRecipeAsync(Recipe item) {
            return base.Channel.SaveRecipeAsync(item);
        }
        
        public Recipe[] GetAllRecipes() {
            return base.Channel.GetAllRecipes();
        }
        
        public System.Threading.Tasks.Task<Recipe[]> GetAllRecipesAsync() {
            return base.Channel.GetAllRecipesAsync();
        }
    }
}
